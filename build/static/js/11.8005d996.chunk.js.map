{"version":3,"sources":["components/checkin/flightSelector.jsx","components/checkin/index.jsx"],"names":["FlightSelector","flightsData","useState","checked","setChecked","selectorExpanded","setSelectorExpanded","flights","dispatch","useDispatch","length","Accordion","expanded","onChange","AccordionSummary","expandIcon","id","Typography","variant","AccordionDetails","List","sx","width","maxWidth","bgcolor","ListItem","textDecoration","ListItemText","primary","map","flight","flightId","labelId","flight_no","disablePadding","ListItemButton","role","undefined","onClick","currentIndex","indexOf","newChecked","push","splice","dense","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","marginLeft","flight_dep_time","flight_destination","Button","getBookingDetails","margin","CheckIn","currentDate","Date","currentHours","getHours","currentMinutes","getMinutes","currentTime","padStart","useEffect","getFlightsByCurrentTime","useSelector","state","Bookings","lazy","bookings"],"mappings":"iSAmBe,SAASA,EAAT,GAA0C,IAAhBC,EAAe,EAAfA,YACvC,EAA8BC,mBAAS,CAAC,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACQC,EAAYN,EAAZM,QACFC,EAAWC,cAqBjB,OAAOF,EAAQG,OAAS,EACtB,eAACC,EAAA,EAAD,CACEC,SAAUP,EACVQ,SAAU,kBAAMP,GAAqBD,IAFvC,UAIE,cAACS,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZ,gBAAc,kBACdC,GAAG,iBAHL,SAKE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iCAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,MAAO,OAAQC,SAAU,IAAKC,QAAS,oBAD/C,UAGE,eAACC,EAAA,EAAD,CAAUJ,GAAI,CAAEK,eAAgB,aAAhC,UACE,cAACC,EAAA,EAAD,CAAcX,GAAG,gBAAgBY,QAAQ,WACzC,cAACD,EAAA,EAAD,CAAcX,GAAG,mBAAmBY,QAAQ,eAC5C,cAACD,EAAA,EAAD,CACEX,GAAG,yBACHY,QAAQ,mBAEV,cAACD,EAAA,EAAD,CAAcX,GAAG,yBAAyBY,QAAQ,mBAEnDrB,EAAQsB,KAAI,SAACC,GACZ,IA7CYC,EA6CNC,EAAO,8BAA0BF,EAAOG,WAE9C,OACE,cAACR,EAAA,EAAD,CAAiCS,gBAAc,EAA/C,SACE,eAACC,EAAA,EAAD,CACEC,UAAMC,EACNC,SAnDMP,EAmDgBD,EAAOd,GAnDV,WACjC,IAAMuB,EAAepC,EAAQqC,QAAQT,GAC/BU,EAAa,IAEG,IAAlBF,EACFE,EAAWC,KAAKX,GAEhBU,EAAWE,OAAOJ,EAAc,GAGlCnC,EAAWqC,KA0CGG,OAAK,EAHP,UAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACL5C,SAAyC,IAAhCA,EAAQqC,QAAQV,EAAOd,IAChCgC,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBlB,OAGrC,cAACL,EAAA,EAAD,CACEX,GAAE,UAAKgB,EAAL,MACFJ,QAASE,EAAOG,UAChBZ,GAAI,CAAE8B,WAAY,UAEpB,cAACxB,EAAA,EAAD,CACEX,GAAE,UAAKgB,EAAL,MACFJ,QAASE,EAAOsB,kBAElB,cAACzB,EAAA,EAAD,CACEX,GAAE,UAAKgB,EAAL,MACFJ,QAASE,EAAOuB,mBAChBhC,GAAI,CAAE8B,WAAY,cA3BTrB,EAAOG,mBAmC9B,cAACqB,EAAA,EAAD,CAAQpC,QAAQ,YAAYoB,QAtEZ,WAClB9B,EAAS+C,YAAkBpD,EAAQ,KAEnCG,GAAoB,IAmEgCe,GAAI,CAAEmC,OAAQ,QAAhE,oCAKE,mBCjFOC,UA1Bf,WACE,IAAMjD,EAAWC,cACXiD,EAAc,IAAIC,KAClBC,EAAY,UAAMF,EAAYG,YAC9BC,EAAc,UAAMJ,EAAYK,cAChCC,EAAW,UAAMJ,EAAaK,SAAS,EAAG,IAA/B,OAAoCH,EAAeG,SAClE,EACA,IAGFC,qBAAU,WACR1D,EAAS2D,YAAwBH,MAChC,IAEH,IAAMzD,EAAU6D,aAAY,SAACC,GAAD,OAAWA,EAAM9D,WAEvC+D,EAAWC,gBAAK,kBAAM,iCAE5B,OACE,qCACE,cAACvE,EAAD,CAAgBC,YAAaM,IAC7B,cAAC,WAAD,UAAWA,EAAQiE,UAAY,cAACF,EAAD","file":"static/js/11.8005d996.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Checkbox from '@mui/material/Checkbox'\nimport Button from '@mui/material/Button'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport Typography from '@mui/material/Typography'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport { useDispatch } from 'react-redux'\n\nimport { getBookingDetails } from '../../redux/actions'\n\nexport default function FlightSelector({ flightsData }) {\n  const [checked, setChecked] = useState([0])\n  const [selectorExpanded, setSelectorExpanded] = useState(true)\n  const { flights } = flightsData\n  const dispatch = useDispatch()\n\n  const handleToggle = (flightId) => () => {\n    const currentIndex = checked.indexOf(flightId)\n    const newChecked = []\n\n    if (currentIndex === -1) {\n      newChecked.push(flightId)\n    } else {\n      newChecked.splice(currentIndex, 1)\n    }\n\n    setChecked(newChecked)\n  }\n\n  const handleClick = () => {\n    dispatch(getBookingDetails(checked[0]))\n\n    setSelectorExpanded(false)\n  }\n\n  return flights.length > 0 ? (\n    <Accordion\n      expanded={selectorExpanded}\n      onChange={() => setSelectorExpanded(!selectorExpanded)}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography variant=\"h6\">Available flights</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <List\n          sx={{ width: '100%', maxWidth: 600, bgcolor: 'background.paper' }}\n        >\n          <ListItem sx={{ textDecoration: 'underline' }}>\n            <ListItemText id=\"header-select\" primary=\"Select\" />\n            <ListItemText id=\"header-flight-no\" primary=\"Flight No.\" />\n            <ListItemText\n              id=\"header-flight-dep-time\"\n              primary=\"Departure time\"\n            />\n            <ListItemText id=\"header-flight-dep-dest\" primary=\"Destination\" />\n          </ListItem>\n          {flights.map((flight) => {\n            const labelId = `checkbox-list-label-${flight.flight_no}`\n\n            return (\n              <ListItem key={flight.flight_no} disablePadding>\n                <ListItemButton\n                  role={undefined}\n                  onClick={handleToggle(flight.id)}\n                  dense\n                >\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked.indexOf(flight.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    id={`${labelId}-A`}\n                    primary={flight.flight_no}\n                    sx={{ marginLeft: '60px' }}\n                  />\n                  <ListItemText\n                    id={`${labelId}-B`}\n                    primary={flight.flight_dep_time}\n                  />\n                  <ListItemText\n                    id={`${labelId}-C`}\n                    primary={flight.flight_destination}\n                    sx={{ marginLeft: '30px' }}\n                  />\n                </ListItemButton>\n              </ListItem>\n            )\n          })}\n        </List>\n      </AccordionDetails>\n      <Button variant=\"contained\" onClick={handleClick} sx={{ margin: '20px' }}>\n        Get booking details\n      </Button>\n    </Accordion>\n      ) : (\n        'No flights found'\n      )\n}\n\nFlightSelector.propTypes = {\n  flightsData: PropTypes.array\n}","import React, { useEffect, lazy, Suspense } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getFlightsByCurrentTime } from '../../redux/actions'\nimport FlightSelector from './flightSelector'\n\nfunction CheckIn() {\n  const dispatch = useDispatch()\n  const currentDate = new Date()\n  const currentHours = `${currentDate.getHours()}`\n  const currentMinutes = `${currentDate.getMinutes()}`\n  const currentTime = `${currentHours.padStart(2, 0)}${currentMinutes.padStart(\n    2,\n    0\n  )}`\n\n  useEffect(() => {\n    dispatch(getFlightsByCurrentTime(currentTime))\n  }, [])\n\n  const flights = useSelector((state) => state.flights)\n\n  const Bookings = lazy(() => import('./bookings'))\n\n  return (\n    <>\n      <FlightSelector flightsData={flights} />\n      <Suspense>{flights.bookings && <Bookings />}</Suspense>\n    </>\n  )\n}\n\nexport default CheckIn\n"],"sourceRoot":""}