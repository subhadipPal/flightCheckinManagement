{"version":3,"sources":["constants/index.js","components/login/header.jsx","components/login/index.jsx","redux/actions/google.js","components/App.jsx","redux/reducers/rolesReducer.js","redux/reducers/googleReducer.js","redux/reducers/flightsReducer.js","redux/reducers/index.js","redux/store.js","index.js","redux/actions/index.js","redux/actions/types/index.js"],"names":["GOOGLE_CLIENT_ID","DEFAULT_ROLE_ID","ADMIN_ROLE_ID","STAFF_ROLE_ID","ancServices","seatCols","getSeatRows","seatingCapacity","Array","keys","map","val","LoginHeader","props","isUserLoginSuccess","handleGoogleResponse","selectedRole","adminLoginStatus","dispatch","useDispatch","handleSetNewRole","roleId","setNewRole","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","Typography","variant","component","clientId","buttonText","onLogoutSuccess","Button","onClick","ADMIN_LOGIN_SUCCESS","adminLogout","Home","accessToken","useSelector","state","googleReducer","roles","isUserLoggedIn","undefined","CheckInComponent","lazy","AdminLogin","StaffLogin","AdminDashBoard","LoadingComponent","handleResponse","googleResponse","type","GOOGLE_OAUTH2","googleOAuth2","initRoles","className","fallback","App","useEffect","INIT_STATE","ADMIN_LOGIN_STATUS","initialState","flights","bookings","currentBooking","currentFlightId","flightsReducer","action","LOAD_FLIGHTS","payload","LOAD_BOOKINGS","CURRENT_BOOKING","CURRENT_FLIGHT_ID","rootReducer","combineReducers","INIT_ROLES","SET_ADMIN_ROLE","SET_STAFF_ROLE","ADMIN_LOGOUT","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","Store","document","querySelector","getFlightsByCurrentTime","currentTime","a","axios","get","data","getBookingDetails","flightId","length","setCurrentBooking","updateBooking","bookingData","bookingId","patch","updatedBooking","checkAdminLoginStatus","credentials","status","username","password","ADMIN_LOGIN_ERROR","addNewPassenger","newPassengerData","post","deleteBooking","delete"],"mappings":"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","file":"static/js/main.5538ecaa.chunk.js","sourcesContent":["export const GOOGLE_CLIENT_ID =\n  '695639595546-90m1359ddlofvm6o0lbl4d4iaoisg0bp.apps.googleusercontent.com'\nexport const DEFAULT_ROLE_ID = 0\nexport const ADMIN_ROLE_ID = 1\nexport const STAFF_ROLE_ID = 2\n\nexport const ancServices = [\n  'Extra Blanket',\n  'Extra Pillow',\n  'Vegan food',\n  'Priority boarding',\n  'Fast track security',\n]\n\nexport const seatCols = ['A', 'B', 'C', 'D', 'E', 'F']\n\nexport const getSeatRows = (seatingCapacity) =>\n  [...Array(seatingCapacity).keys()].map((val) => val + 1)\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { GoogleLogout } from 'react-google-login'\n\nimport {\n  GOOGLE_CLIENT_ID,\n  ADMIN_ROLE_ID,\n  STAFF_ROLE_ID,\n  DEFAULT_ROLE_ID,\n} from '../../constants'\nimport { ADMIN_LOGIN_SUCCESS } from '../../redux/actions/types'\n\nimport { setNewRole, adminLogout } from '../../redux/actions'\n\nfunction LoginHeader(props) {\n  const {\n    isUserLoginSuccess = false,\n    handleGoogleResponse,\n    selectedRole,\n    adminLoginStatus,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const handleSetNewRole = (roleId) => dispatch(setNewRole(roleId))\n\n  const handleAdminLogout = () => dispatch(adminLogout())\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Airline check-In manager\n          </Typography>\n\n          {!isUserLoginSuccess ? (\n            <>\n              {(selectedRole === STAFF_ROLE_ID ||\n                selectedRole === DEFAULT_ROLE_ID) && (\n                <Button\n                  color=\"inherit\"\n                  onClick={() => handleSetNewRole(ADMIN_ROLE_ID)}\n                >\n                  Admin\n                </Button>\n              )}\n\n              {selectedRole === ADMIN_ROLE_ID &&\n                adminLoginStatus === ADMIN_LOGIN_SUCCESS && (\n                  <Button color=\"inherit\" onClick={() => handleAdminLogout()}>\n                    Admin logout\n                  </Button>\n                )}\n\n              {selectedRole === ADMIN_ROLE_ID &&\n                adminLoginStatus !== ADMIN_LOGIN_SUCCESS && (\n                  <Button\n                    color=\"inherit\"\n                    onClick={() => handleSetNewRole(STAFF_ROLE_ID)}\n                  >\n                    Staff\n                  </Button>\n                )}\n            </>\n              ) : (\n            <GoogleLogout\n              clientId={GOOGLE_CLIENT_ID}\n              buttonText=\"Logout\"\n              onLogoutSuccess={handleGoogleResponse}\n            />\n              )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  )\n}\n\nexport default LoginHeader\n","import React, { Suspense, lazy } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport LoginHeader from './header'\nimport { googleOAuth2 } from '../../redux/actions/google'\nimport { initRoles, setNewRole } from '../../redux/actions'\nimport { DEFAULT_ROLE_ID, ADMIN_ROLE_ID, STAFF_ROLE_ID } from '../../constants'\n\nimport { ADMIN_LOGIN_SUCCESS } from '../../redux/actions/types'\n\nfunction Home() {\n  const dispatch = useDispatch()\n\n  const accessToken = useSelector((state) => state.googleReducer.accessToken)\n  const selectedRole = useSelector((state) => state.roles?.selectedRole)\n  const adminLoginStatus = useSelector((state) => state.roles?.adminLoginStatus)\n\n  const isUserLoggedIn = accessToken !== undefined\n  if (isUserLoggedIn) {\n    dispatch(setNewRole(2))\n  }\n\n  const CheckInComponent = lazy(() => import('../checkin'))\n\n  const AdminLogin = lazy(() => import('./adminLogin'))\n\n  const StaffLogin = lazy(() => import('./staffLogin'))\n\n  const AdminDashBoard = lazy(() => import('../admin'))\n\n  const LoadingComponent = <div>Loading...</div>\n\n  const handleResponse = (googleResponse) => {\n    dispatch(googleOAuth2(googleResponse))\n\n    if (!googleResponse) {\n      dispatch(initRoles())\n    }\n  }\n\n  return (\n    <div className=\"login\">\n      <LoginHeader\n        isUserLoginSuccess={isUserLoggedIn}\n        handleGoogleResponse={handleResponse}\n        selectedRole={selectedRole}\n        adminLoginStatus={adminLoginStatus}\n      />\n\n      <Suspense fallback={LoadingComponent}>\n        {!isUserLoggedIn &&\n          (selectedRole === STAFF_ROLE_ID ||\n            selectedRole === DEFAULT_ROLE_ID) && (\n            <StaffLogin handleGoogleResponse={handleResponse} />\n          )}\n      </Suspense>\n\n      <Suspense fallback={LoadingComponent}>\n        {isUserLoggedIn && <CheckInComponent />}\n      </Suspense>\n\n      <Suspense fallback={LoadingComponent}>\n        {!isUserLoggedIn &&\n          selectedRole === ADMIN_ROLE_ID &&\n          adminLoginStatus !== ADMIN_LOGIN_SUCCESS && <AdminLogin />}\n      </Suspense>\n\n      <Suspense fallback={LoadingComponent}>\n        {!isUserLoggedIn &&\n          selectedRole === ADMIN_ROLE_ID &&\n          adminLoginStatus === ADMIN_LOGIN_SUCCESS && <AdminDashBoard />}\n      </Suspense>\n    </div>\n  )\n}\n\nexport default Home\n","import { GOOGLE_OAUTH2 } from './types'\n\nexport const googleOAuth2 = (googleResponse) => {\n  return (dispatch) => {\n    if (typeof googleResponse === 'undefined') {\n      googleResponse = []\n    }\n\n    dispatch({ type: GOOGLE_OAUTH2, googleResponse })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { initRoles } from '../redux/actions'\nimport Home from './login'\nimport './App.scss'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initRoles())\n  }, [dispatch])\n\n  return <Home />\n}\n\nexport default App\n","import {\n  INIT_ROLES,\n  SET_ADMIN_ROLE,\n  SET_STAFF_ROLE,\n  ADMIN_LOGIN_STATUS,\n  ADMIN_LOGOUT,\n} from '../actions/types'\n\nimport { DEFAULT_ROLE_ID, ADMIN_ROLE_ID, STAFF_ROLE_ID } from '../../constants'\n\nconst INIT_STATE = {\n  roles: [],\n  selectedRole: DEFAULT_ROLE_ID,\n  adminLoginStatus: ADMIN_LOGIN_STATUS,\n}\n\nexport const roles = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case INIT_ROLES:\n      return { ...state, roles: ['admin', 'staff'] }\n    case SET_ADMIN_ROLE:\n      return { ...state, selectedRole: ADMIN_ROLE_ID }\n    case SET_STAFF_ROLE:\n      return { ...state, selectedRole: STAFF_ROLE_ID }\n    case ADMIN_LOGIN_STATUS:\n      return { ...state, adminLoginStatus: action.payload }\n    case ADMIN_LOGOUT:\n      return {\n        ...state,\n        selectedRole: DEFAULT_ROLE_ID,\n        adminLoginStatus: ADMIN_LOGIN_STATUS,\n      }\n    default:\n      return state\n  }\n}\n","import { GOOGLE_OAUTH2 } from '../actions/types'\n\nconst initialState = []\n\nexport const googleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GOOGLE_OAUTH2: {\n      return action.googleResponse\n    }\n    default:\n      return state\n  }\n}\n","import {\n  LOAD_FLIGHTS,\n  LOAD_BOOKINGS,\n  CURRENT_BOOKING,\n  CURRENT_FLIGHT_ID,\n} from '../actions/types'\n\nconst INIT_STATE = {\n  flights: [],\n  bookings: [],\n  currentBooking: null,\n  currentFlightId: null,\n}\n\nconst flightsReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case LOAD_FLIGHTS:\n      return {\n        ...state,\n        flights: action.payload,\n        bookings: [],\n        currentBooking: null,\n        currentFlightId: null,\n      }\n    case LOAD_BOOKINGS:\n      return { ...state, bookings: action.payload }\n    case CURRENT_BOOKING:\n      return { ...state, currentBooking: action.payload }\n    case CURRENT_FLIGHT_ID:\n      return { ...state, currentFlightId: action.payload }\n    default:\n      return state\n  }\n}\n\nexport default flightsReducer\n","import { combineReducers } from 'redux'\n\nimport { roles } from './rolesReducer'\nimport { googleReducer } from './googleReducer'\nimport flightsReducer from './flightsReducer'\n\nconst rootReducer = combineReducers({\n  roles,\n  googleReducer,\n  flights: flightsReducer,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\nconst middlewares = [thunk]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './components/App'\nimport Store from './redux/store'\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)\n","import axios from 'axios'\n\nimport {\n  INIT_ROLES,\n  SET_ADMIN_ROLE,\n  SET_STAFF_ROLE,\n  LOAD_FLIGHTS,\n  LOAD_BOOKINGS,\n  CURRENT_BOOKING,\n  CURRENT_FLIGHT_ID,\n  ADMIN_LOGIN_STATUS,\n  ADMIN_LOGIN_SUCCESS,\n  ADMIN_LOGIN_ERROR,\n  ADMIN_LOGOUT\n} from './types'\n\nimport { ADMIN_ROLE_ID } from '../../constants'\n\nexport const initRoles = () => ({\n  type: INIT_ROLES,\n})\n\nexport const setNewRole = (roleId = 0) => {\n  return roleId === ADMIN_ROLE_ID\n    ? { type: SET_ADMIN_ROLE }\n    : { type: SET_STAFF_ROLE }\n}\n\nexport const getFlightsByCurrentTime = (currentTime) => async (dispatch) => {\n  const flights = await axios.get(\n    `http://localhost:3030/flights?flight_dep_time_gte=${currentTime}`\n  )\n\n  dispatch({\n    type: LOAD_FLIGHTS,\n    payload: flights.data,\n  })\n}\n\nexport const getBookingDetails = (flightId) => async (dispatch) => {\n  const bookings = await axios.get(\n    `http://localhost:3030/flights/${flightId}/bookings`\n  )\n\n  dispatch({\n    type: LOAD_BOOKINGS,\n    payload: bookings.data,\n  })\n\n  dispatch({\n    type: CURRENT_FLIGHT_ID,\n    payload: flightId,\n  })\n\n  if (bookings.data.length === 0) {\n    dispatch({\n      type: CURRENT_BOOKING,\n      payload: null,\n    })\n  }\n}\n\nexport const setCurrentBooking = (currentBooking) => ({\n  type: CURRENT_BOOKING,\n  payload: currentBooking,\n})\n\nexport const updateBooking =\n  (bookingData, bookingId, flightId) => async (dispatch) => {\n    const updatedBooking = await axios.patch(\n      `http://localhost:3030/bookings/${bookingId}`,\n      bookingData\n    )\n\n    dispatch({\n      type: CURRENT_BOOKING,\n      payload: updatedBooking.data,\n    })\n\n    dispatch(getBookingDetails(flightId))\n  }\n\nexport const checkAdminLoginStatus = (credentials) => async (dispatch) => {\n  const { data } = await axios.get('http://localhost:3030/admin')\n\n  let status = ''\n  if (\n    data.username === credentials.username &&\n    data.password === credentials.password\n  ) {\n    status = ADMIN_LOGIN_SUCCESS\n  } else {\n    status = ADMIN_LOGIN_ERROR\n  }\n\n  dispatch({\n    type: ADMIN_LOGIN_STATUS,\n    payload: status,\n  })\n}\n\nexport const adminLogout = () => ({\n  type: ADMIN_LOGOUT,\n})\n\nexport const addNewPassenger = (newPassengerData) => async (dispatch) => {\n  const { data } = await axios.post(\n    'http://localhost:3030/bookings',\n    newPassengerData\n  )\n\n  dispatch({\n    type: CURRENT_BOOKING,\n    payload: data,\n  })\n\n  dispatch(getBookingDetails(data.flightId))\n}\n\nexport const deleteBooking = (bookingId, flightId) => async (dispatch) => {\n  await axios.delete(`http://localhost:3030/bookings/${bookingId}`)\n\n  dispatch({\n    type: CURRENT_BOOKING,\n    payload: null,\n  })\n\n  dispatch(getBookingDetails(flightId))\n}\n","export const INIT_ROLES = 'INIT_ROLES'\nexport const SET_ADMIN_ROLE = 'SET_ADMIN_ROLE'\nexport const SET_STAFF_ROLE = 'SET_STAFF_ROLE'\n\nexport const GOOGLE_OAUTH2 = 'GOOGLE_OAUTH2'\nexport const LOAD_FLIGHTS = 'LOAD_FLIGHTS'\nexport const LOAD_BOOKINGS = 'LOAD_BOOKINGS'\nexport const CURRENT_BOOKING = 'CURRENT_BOOKING'\nexport const CURRENT_FLIGHT_ID = 'CURRENT_FLIGHT_ID'\n\nexport const ADMIN_LOGIN_STATUS = 'ADMIN_LOGIN_STATUS'\nexport const ADMIN_LOGIN_ERROR = 'LOGIN_ERROR'\nexport const ADMIN_LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT'\n"],"sourceRoot":""}